
                Встроенные типы объектов Python
Типы объектов*
Целое число  -   int (от слова «integer>>) -        43, -56, 0, 2548
Число с плавающей точкой (вещественные  числа) - float - 4.5, -43.0, 32.5
Строка  -str (от слова <<string>>) -  'hello', "Hello"
Логический тип - bool - (от слова «boolean») - True, False
Список  - list - [43, -54.5, True, 'hello']
Словарь - dict (от слова «dictionary») - {'a':123, 'b':456}
Кортеж  - tuple - (1, 2, 3, 4, 5)
Множество - set - {1,2,3,4)
Файлы   - file


                Арифметические операции 
Название операции 
Сложение + При сложении двух целых чисел результатом будет также целое число
Вычитание -
Умножение *
Деление / (целое / целое = вещественное)
        При делении результат всегда будет вещественного типа вне зависимости от участников деления
Возведение в степень **
        Если в операции возведения в степень участвуют два целых числа,
        результат будет целым числом. Если есть хотя бы одно вещественное, то и результат будет типа float.
Целочисленное деление // (8//10=0     11//5=2)
Остаток от деления %


            Приоритет арифметических операций
    Если встречаются операции одинакового приоритета то выполняются слева направо
1) Операции в ()
2) **
3) * / // %
4) + -

            Встроенные математические функции
abs (value) - abs(-7)7, abs(7) → 7
min (X1, X2, ... X.) - min(-43, 90,832,-78) → -78
max (X1, X2, ... X.) - max(-43, 90,832,-78) 832
pow (x, y) - pow(2,5)→ 32 
                                              -2 -1 0 1 2 3
round() - round(456.333,-2)= 500  (разряды числа 456.333)
        У функции round есть особенность - она использует банковское округление, а не обычное правило округления.
        По правилам банковского округления пограничные случаи, такие как 4.5 или 9.5, округляются не вверх, а 
        в сторону ближайшего четного числа. Вот почему round(4.5) будет равно 4, а round(9.5) вернет значение 10.


В python у каждого объекта есть свой тип данных. У целых чисел тип называется int, 
у вещественных чисел — float. Вы всегда можете проверить тип объекта с помощью функции type. 
Для этого передайте объект в функцию type, и она вернёт его тип. Вот пример:

print(type(10))  # <class 'int'>
print(type(10.5))  # <class 'float'>
print(type(0))  # <class 'int'>
print(type(0.0))  # <class 'float'>
print(type(-34))  # <class 'int'>
print(type(-43.7))  # <class 'float'>

