                                                F-строки
В данном уроке мы с вами познакомимся с f-строками в Python. Данный функционал в python доступен с версии 3.6. 
Мы разберем основные способы работы с этим функционалом, но если вам нужна какая-то дополнительная информация, то 
вы можете найти её в стандарте PEP 498 в документации python.

Напомню вам текст программы, который мы написали на предыдущем уроке. У нас было три переменные: name , mid_name   и 
balance и наша задача была подставить значения этих переменных в соответствующие места.

    name = 'Семён'
    mid_name = 'Семёнов'
    balance = 32.56

    text = """Дорогой {n} {m}, 
    баланс Вашего лицевого счёта составляет {b} руб.""".format(m=mid_name, n=name, b=balance)

print(text)

Просто так указать названия наших переменных в строке мы не можем потому что питон воспримет это всё как текст и 
выведет соответствующие названия этих переменных. Чтобы исправить эту проблему мы с вами должны в начало строки 
поставить символ f и название каждой переменной заключить в фигурные скобки.

Когда вы указываете перед стройкой f python воспринимает её как необычную строку и каждое содержимое фигурных скобок он будет 
воспринимать как выражение на языке программирования. В фигурных скобках вы можете писать свои какие-либо выражения и никто не запрещает вам 
воспользоваться математическими операциями.


                Примеры с циклами, функциями, словарями
Все эти темы (функции, словари, циклы) мы с вами рассмотрим в этом курсе позже, поэтому если возникает сложность с пониманием 
того, что происходит в этом коде, пропустите его сейчас  и возвращайтесь со временем
Вы можете написать свою самописную функцию. Например, напишем функцию, которая принимает одно число и возвращает его квадрат. 
Внутри f-строки мы можем по имени этой функции вызвать её и передать аргумент. Если тема "функции" вам незнакома, то не 
расстраивайтесь - вы можете посмотреть моё отдельное видео на эту тему уже сейчас в курсе или пройти курс последовательно и 
использовать эту возможность в f-строках позднее.

    name = 'Семён'
    mid_name = 'Семёнов'

    def f(x):
        return x ** 2

    text = f"""Дорогой {name} {mid_name}, 
    баланс Вашего лицевого счёта составляет {f(5)} руб."""

    print(text)


Также вы можете использовать все возможности словарей. Мы можем заключить все наши три переменные в словарь.  
Мы с вами имеем словарь d и к словарю можно обращаться по ключам.

    d = {
        "name": 'Семён',
        "mid_name": 'Семёнов',
        "balance": 32.56
    }


    text = f"""Дорогой {d['name']} {d['mid_name']}, 
    баланс Вашего лицевого счёта составляет {d['balance']} руб."""

    print(text)

вот еще пример использования

    gender = {
        'm': 'Дорогой',
        'f': 'Дорогая',
    }

    a = [
        ['Семён', 'Семёнов', 32.56, 'm'],
        ['Зоя', 'Иванова', 378, 'f'],
        ['Катерина', 'Петрова', 65, 'f'],
    ]

    for name, mid_name, balance, g in a:
        text = f"""{gender[g]} {name} {mid_name}, 
    баланс Вашего лицевого счёта составляет {balance} руб."""
        print(text)

